{
  "service": {
    "service": "roboticists-apis",
    "serviceObject": {
      "name": "roboticists-apis"
    },
    "provider": {
      "name": "aws",
      "profile": "roboticists",
      "runtime": "dotnetcore3.1",
      "stage": "dev",
      "region": "eu-west-1",
      "lambdaHashingVersion": "20201221",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreatePostLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/roboticists-apis-dev-createPost"
            }
          },
          "ListCategoryPostsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/roboticists-apis-dev-listCategoryPosts"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "roboticists-apis",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/roboticists-apis-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/roboticists-apis-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "roboticists-apis",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreatePostLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/roboticists-apis/dev/1619721127106-2021-04-29T18:32:07.106Z/package.zip"
              },
              "Handler": "RoboticistsApis.Apis::RoboticistsApis.Apis.Controllers.PostsController::Post",
              "Runtime": "dotnetcore3.1",
              "FunctionName": "roboticists-apis-dev-createPost",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreatePostLogGroup"
            ]
          },
          "ListCategoryPostsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/roboticists-apis/dev/1619721127106-2021-04-29T18:32:07.106Z/package.zip"
              },
              "Handler": "RoboticistsApis.Apis::RoboticistsApis.Apis.Controllers.PostsController::List",
              "Runtime": "dotnetcore3.1",
              "FunctionName": "roboticists-apis-dev-listCategoryPosts",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListCategoryPostsLogGroup"
            ]
          },
          "CreatePostLambdaVersion1Igh7NuQHeecmdZchQSsafPtmtTlzKWyfosd9kQFOU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreatePostLambdaFunction"
              },
              "CodeSha256": "GapHAIDtNPEfC+w1q/oQdiYT2Gps2nuVHYrmp6PVQlg="
            }
          },
          "ListCategoryPostsLambdaVersionkIkwS8RwqichnAZs9PET52ZHWrcRWlgwuhZygjsM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListCategoryPostsLambdaFunction"
              },
              "CodeSha256": "GapHAIDtNPEfC+w1q/oQdiYT2Gps2nuVHYrmp6PVQlg="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-roboticists-apis",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePosts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "posts",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCategoryposts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "categoryposts",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCategorypostsCategoryVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCategoryposts"
              },
              "PathPart": "{category}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".+\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreatePostLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCategorypostsCategoryVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {
                "method.request.path.category": true
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCategorypostsCategoryVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListCategoryPostsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1619721125875": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPostsOptions",
              "ApiGatewayMethodPostsPost",
              "ApiGatewayMethodCategorypostsCategoryVarGet"
            ]
          },
          "CreatePostLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreatePostLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListCategoryPostsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListCategoryPostsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "blogUsersPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "MfaConfiguration": "OFF",
              "UserPoolName": "BlogUsers",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 6,
                  "RequireLowercase": false,
                  "RequireNumbers": false,
                  "RequireSymbols": false,
                  "RequireUppercase": false
                }
              }
            }
          },
          "blogUsersPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "BlogUsersClient",
              "GenerateSecret": false,
              "AllowedOAuthFlows": [
                "implicit"
              ],
              "AllowedOAuthFlowsUserPoolClient": true,
              "AllowedOAuthScopes": [
                "phone",
                "email",
                "openid",
                "profile",
                "aws.cognito.signin.user.admin"
              ],
              "UserPoolId": {
                "Ref": "blogUsersPool"
              },
              "CallbackURLs": [
                "http://localhost:3000/signedin",
                "https://u3fnac9d51.execute-api.eu-west-1.amazonaws.com/dev/signedin"
              ],
              "ExplicitAuthFlows": [
                "ALLOW_CUSTOM_AUTH",
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "SupportedIdentityProviders": [
                "COGNITO"
              ]
            }
          },
          "blogUsersPoolDomain": {
            "Type": "AWS::Cognito::UserPoolDomain",
            "Properties": {
              "UserPoolId": {
                "Ref": "blogUsersPool"
              },
              "Domain": "roboticists"
            }
          },
          "blogPostsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "BlogPosts",
              "AttributeDefinitions": [
                {
                  "AttributeName": "category",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "blogId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "dateTimestamp",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "category",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "blogId",
                  "KeyType": "RANGE"
                }
              ],
              "LocalSecondaryIndexes": [
                {
                  "IndexName": "dateTimestampLsi",
                  "KeySchema": [
                    {
                      "AttributeName": "category",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "dateTimestamp",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 3,
                "WriteCapacityUnits": 2
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-roboticists-apis-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreatePostLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreatePostLambdaVersion1Igh7NuQHeecmdZchQSsafPtmtTlzKWyfosd9kQFOU"
            },
            "Export": {
              "Name": "sls-roboticists-apis-dev-CreatePostLambdaFunctionQualifiedArn"
            }
          },
          "ListCategoryPostsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListCategoryPostsLambdaVersionkIkwS8RwqichnAZs9PET52ZHWrcRWlgwuhZygjsM"
            },
            "Export": {
              "Name": "sls-roboticists-apis-dev-ListCategoryPostsLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-roboticists-apis-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "createPost": {
        "handler": "RoboticistsApis.Apis::RoboticistsApis.Apis.Controllers.PostsController::Post",
        "package": {
          "artifact": "bin/Release/netcoreapp3.1/package.zip"
        },
        "events": [
          {
            "http": {
              "path": "posts",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "roboticists-apis-dev-createPost",
        "memory": 1024,
        "timeout": 6,
        "runtime": "dotnetcore3.1",
        "vpc": {},
        "versionLogicalId": "CreatePostLambdaVersion1Igh7NuQHeecmdZchQSsafPtmtTlzKWyfosd9kQFOU"
      },
      "listCategoryPosts": {
        "handler": "RoboticistsApis.Apis::RoboticistsApis.Apis.Controllers.PostsController::List",
        "package": {
          "artifact": "bin/Release/netcoreapp3.1/package.zip"
        },
        "events": [
          {
            "http": {
              "path": "categoryposts/{category}",
              "method": "get",
              "request": {
                "parameters": {
                  "method.request.path.category": true
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "roboticists-apis-dev-listCategoryPosts",
        "memory": 1024,
        "timeout": 6,
        "runtime": "dotnetcore3.1",
        "vpc": {},
        "versionLogicalId": "ListCategoryPostsLambdaVersionkIkwS8RwqichnAZs9PET52ZHWrcRWlgwuhZygjsM"
      }
    },
    "resources": {
      "Resources": {
        "blogUsersPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "MfaConfiguration": "OFF",
            "UserPoolName": "BlogUsers",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 6,
                "RequireLowercase": false,
                "RequireNumbers": false,
                "RequireSymbols": false,
                "RequireUppercase": false
              }
            }
          }
        },
        "blogUsersPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "BlogUsersClient",
            "GenerateSecret": false,
            "AllowedOAuthFlows": [
              "implicit"
            ],
            "AllowedOAuthFlowsUserPoolClient": true,
            "AllowedOAuthScopes": [
              "phone",
              "email",
              "openid",
              "profile",
              "aws.cognito.signin.user.admin"
            ],
            "UserPoolId": {
              "Ref": "blogUsersPool"
            },
            "CallbackURLs": [
              "http://localhost:3000/signedin",
              "https://u3fnac9d51.execute-api.eu-west-1.amazonaws.com/dev/signedin"
            ],
            "ExplicitAuthFlows": [
              "ALLOW_CUSTOM_AUTH",
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "SupportedIdentityProviders": [
              "COGNITO"
            ]
          }
        },
        "blogUsersPoolDomain": {
          "Type": "AWS::Cognito::UserPoolDomain",
          "Properties": {
            "UserPoolId": {
              "Ref": "blogUsersPool"
            },
            "Domain": "roboticists"
          }
        },
        "blogPostsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "BlogPosts",
            "AttributeDefinitions": [
              {
                "AttributeName": "category",
                "AttributeType": "S"
              },
              {
                "AttributeName": "blogId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "dateTimestamp",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "category",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "blogId",
                "KeyType": "RANGE"
              }
            ],
            "LocalSecondaryIndexes": [
              {
                "IndexName": "dateTimestampLsi",
                "KeySchema": [
                  {
                    "AttributeName": "category",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "dateTimestamp",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 3,
              "WriteCapacityUnits": 2
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "app": "roboticistsapp",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "app": "roboticistsapp",
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "artifactDirectoryName": "serverless/roboticists-apis/dev/1619721127106-2021-04-29T18:32:07.106Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/roboticists-apis/dev/1619721127106-2021-04-29T18:32:07.106Z",
    "artifact": ""
  }
}